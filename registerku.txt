package com.KP.simonicv2.Registrasi;

import android.app.DatePickerDialog;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.KP.simonicv2.Login.Login;
import com.KP.simonicv2.MainActivity;
import com.KP.simonicv2.R;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.analytics.FirebaseAnalytics;
import com.pranavpandey.android.dynamic.toasts.DynamicToast;

import java.util.ArrayList;
import java.util.Calendar;

import static android.text.TextUtils.isEmpty;

public class Registrasi extends AppCompatActivity {
     Spinner spProvinsi;
     ArrayList <Registrasi_gs> registerlist = new ArrayList<>();
    TextView tglmulai,tglselesai;
    ImageButton exit;
    Button registrasi;
    EditText nama,nik,alamat,id,riwayat,coordinate,uuid;
    RadioButton jkp,jkw;
    Registrasi_gs registrasi_gs;
    private FirebaseAuth mAuth;
    private FirebaseAnalytics mFirebaseAnalytics;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.registrasi);
        registerlist = new ArrayList<>();
        spProvinsi = (Spinner) findViewById(R.id.sp_name);
        tglmulai = (TextView) findViewById(R.id.txt_durasi);
        tglselesai = (TextView) findViewById(R.id.txt_selesai);
        nama = (EditText) findViewById(R.id.txt_nama);
        nik = (EditText) findViewById(R.id.txt_nik);
        alamat = (EditText) findViewById(R.id.txt_alamat);
        id = (EditText) findViewById(R.id.txt_device);

        jkp = (RadioButton) findViewById(R.id.pria);
        jkw = (RadioButton) findViewById(R.id.wanita);
        riwayat= (EditText) findViewById(R.id.txt_riwayat);
       coordinate = (EditText) findViewById(R.id.txt_coordinate);
       uuid = (EditText) findViewById(R.id.txt_uuid);
        exit = (ImageButton) findViewById(R.id.exit_regis);
        exit.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                Intent intent = new Intent(Registrasi.this, MainActivity.class);
                startActivity(intent);
            }
        });

        final Calendar calendar = Calendar.getInstance();

        final int tahun = calendar.get(Calendar.YEAR);
        final int bulan = calendar.get(Calendar.MONTH);
        final int hari = calendar.get(Calendar.DAY_OF_MONTH);

        tglmulai.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                DatePickerDialog datePickerDialog = new DatePickerDialog(
                        Registrasi.this, new DatePickerDialog.OnDateSetListener() {
                    @Override
                    public void onDateSet(DatePicker view, int year, int month, int dayofmonth) {
                        String sDate = dayofmonth + "/" + month +  "/" + year;
                        tglmulai.setText(sDate);
                    }
                },tahun,bulan,hari
                );
                datePickerDialog.show();
            }
        });

        tglselesai.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                DatePickerDialog datePickerDialog = new DatePickerDialog(
                        Registrasi.this, new DatePickerDialog.OnDateSetListener() {
                    @Override
                    public void onDateSet(DatePicker view, int year, int month, int dayofmonth) {
                        String sDate = dayofmonth + "/" + month +  "/" + year;
                        tglselesai.setText(sDate);
                    }
                },tahun,bulan,hari
                );
                datePickerDialog.show();
            }
        });
        registrasi = (Button) findViewById(R.id.btn_registrasi);
        registrasi.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //Mendapatkan UserID dari pengguna yang Terautentikasi
                mAuth=FirebaseAuth.getInstance();
                mFirebaseAnalytics=FirebaseAnalytics.getInstance(Registrasi.this);
                String getUserID = mAuth.getCurrentUser().getUid();
G
                //Mendapatkan Instance dari Database
                FirebaseDatabase database = FirebaseDatabase.getInstance();
                DatabaseReference getReference;

                //Menyimpan Data yang diinputkan User kedalam Variable
                String getNama = nama.getText().toString();
                String getNik = nik.getText().toString();
                String getAlamat = alamat.getText().toString();
                String getDevice = id.getText().toString();
                String getRiwayat = riwayat.getText().toString();
                String getCoordinate = coordinate.getText().toString();
                String getUuid = uuid.getText().toString();
                String  getJkp = jkp.getText().toString();
                String getJkw = jkw.getText().toString();

                String getDurasi = tglmulai.getText().toString();
                String getSelesai = tglselesai.getText().toString();
                getReference = database.getReference(); // Mendapatkan Referensi dari Database
                if (jkp.isChecked() ){
                    registrasi_gs.setJk(getJkp);
                    String getJk = jkp.getText().toString();
                }else if (jkw.isChecked() ){
                    registrasi_gs.setJk(getJkw);
                    String getJk = jkw.getText().toString();
                }
                // Mengecek apakah ada data yang kosong
                if((nama.getText()) == null && (nik.getText())== null && (nama.getText())== null && (alamat.getText())== null && (id.getText())== null && (riwayat.getText())== null && (coordinate.getText()) == null&& (uuid.getText())== null && (tglmulai.getText())== null&& (tglselesai.getText())== null){
                    //Jika Ada, maka akan menampilkan pesan singkan seperti berikut ini.
                    DynamicToast.makeError(Registrasi.this, "Data Tidak Boleh Kosong").show();
                }else {
        /*
        Jika Tidak, maka data dapat diproses dan meyimpannya pada Database
        Menyimpan data referensi pada Database berdasarkan User ID dari masing-masing Akun
        */
                    getReference.child("Data ODP").child(getUserID).push()
                            .setValue(new Registrasi_gs(getAlamat, getCoordinate, getDevice,getDurasi,getJk,getNama,getNik,getRiwayat,getSelesai,getUuid))
                            .addOnSuccessListener(Registrasi.this, new OnSuccessListener() {
                                @Override
                                public void onSuccess(Object o) {
                                    //Peristiwa ini terjadi saat user berhasil menyimpan datanya kedalam Database
                                    mFirebaseAnalytics.setUserId(nama.getText().toString());
                                    emptydata();

                                    Toast.makeText(Registrasi.this, "Data Tersimpan", Toast.LENGTH_SHORT).show();
                                }
                            });
                }

            }
        });
    }
    public void emptydata(){
        nama.setText("");
        nik.setText("");
        alamat.setText("");
        id.setText("");
        riwayat.setText("");
        coordinate.setText("");
        jkp.setChecked(false);
        jkw.setChecked(false);
        tglselesai.setText("Show Calendar");
        tglmulai.setText("Show Calendar");
        uuid.setText("");
    }

}
